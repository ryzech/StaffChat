plugins {
    id("java")
    id("com.github.spotbugs").version("5.0.3")
    id("com.github.johnrengelman.shadow").version("7.0.0")
    id("maven-publish")
    id("org.cadixdev.licenser").version("0.6.1")
}

setGroup("net.ryzech")
setVersion("1.1")

compileJava {
    getOptions().setEncoding("UTF-8")
}

java {
    setSourceCompatibility(JavaVersion.VERSION_17)
    setTargetCompatibility(JavaVersion.VERSION_17)
}

repositories {
    mavenCentral()
    maven {
        setUrl("https://repo.papermc.io/repository/maven-public/")
        setName("papermc")
    }
    maven {
        setUrl("https://jitpack.io")
        setName("JDA")
    }
}

dependencies {

    implementation("org.bstats:bstats-velocity:2.2.1")
    implementation "net.kyori:adventure-text-minimessage:4.12.0"
    implementation("com.github.DV8FromTheWorld:JDA:v5.0.0-beta.18")
    annotationProcessor("com.velocitypowered:velocity-api:3.1.1")
    compileOnly("com.velocitypowered:velocity-api:3.1.1")
    compileOnly('org.spongepowered:configurate-yaml:4.1.2')
    compileOnly('com.github.spotbugs:spotbugs-annotations:4.5.3')
    compileOnly('net.luckperms:api:5.4')
}

shadowJar {
    getArchiveClassifier().set("")
    minimize()
    relocate("org.bstats", "net.ryzech.staffchat.bstats")
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    omitVisitors = [ 'FindNonShortCircuit' ]
    reportsDir = file("$buildDir/spotbugs")
    includeFilter = file("include.xml")
    excludeFilter = file("exclude.xml")
    baselineFile = file("baseline.xml")
    onlyAnalyze = ['net.ryzech.staffchat.*' ]
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=ja' ]
}

sourceSets.main.getJava().srcDir(getTasks().register("generateTemplates", Copy) { task ->
    task.getInputs().properties("version": getVersion())
    task.from(file("src/main/templates"))
        .into(getLayout().getBuildDirectory().dir("generated/sources/templates"))
        .expand("version": getVersion())
}.map {
    it.getOutputs()
})

publishing {
    publications {
        maven(MavenPublication) {
            groupId = getGroup()
            artifactId = 'staffchat'
            version = getVersion()
            from components.java

            pom {
                name = 'StaffChat'
                description = 'StaffChat plugin for Velocity, has LuckPerms API support.'
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = "$usr"
                password = "$pwd"
            }

            url = "https://maven.ryzech.net/snapshots"
        }
    }
    license {
        header = file('LICENSE')
        include '**/*.java'
    }
}

assemble.dependsOn(shadowJar)